$icons-folder: "node_modules/@unumux/theme-coloniallife-default/icons";

$grid-columns:      12;
$grid-gutter-width-base: 30px;

$grid-gutter-widths: (
  xs: $grid-gutter-width-base, // 30px
  sm: $grid-gutter-width-base, // 30px
  md: $grid-gutter-width-base, // 30px
  lg: $grid-gutter-width-base, // 30px
  xl: $grid-gutter-width-base  // 30px
);

$grid-breakpoints: (
  // Extra small screen / phone
  xs: 0,
  // Small screen / phone
  sm: 350px,
  // Medium screen / tablet
  md: 600px,
  // Large screen / desktop
  lg: 828px,
  // Extra large screen / wide desktop
  xl: 1230px
);

$container-max-widths: (
  sm: 600px,
  md: 780px,
  lg: 1020px,
  xl: 1200px
);

@import "node_modules/bootstrap/scss/variables";
@import "node_modules/bootstrap/scss/mixins/breakpoints";
@import "node_modules/bootstrap/scss/mixins/grid-framework";
@import "node_modules/bootstrap/scss/mixins/grid";
@import "node_modules/bootstrap/scss/utilities/display";
@import "node_modules/bootstrap/scss/utilities/flex";
@import "node_modules/bootstrap/scss/grid";

@import "../node_modules/@unumux/theme-coloniallife-default/styles";

@import "mixins/mixins";
@import "components/components";

hr {
    background-color: #DEE5EB;
    border-style: none;
    height: 4px;
    margin-bottom: space(2);
}

.willow-page {
    $outer-max-width: 100vw !default;
	$inner-max-width: 100vw !default;

	$outer-max-width: 1900px;
	$inner-max-width: 1200px;

	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	justify-content: flex-start;
	min-height: 100vh;

	max-width: $outer-max-width;
	margin: 0 auto;

	&__content {
		flex-basis: auto;
		flex-grow: 1;
		flex-shrink: 1;
	}

	>*[class^="willow-page"] {

        // Handles setting basis for any direct child element with a class that starts with willow-page.

		max-width: $inner-max-width;
		width: 100%;
		margin: 0 auto;
	}
	
    // The full-bleed/width need to beable to handle the outer/inner max widths.
    // The code below is close, but there's something missing.

	// .full-width {

    //     padding-left: 0;
    //     padding-right: 0;

	// 	@media (min-width: #{$inner-max-width}) {
    //         margin-left: calc(0px - (100vw - #{$inner-max-width})/2);
    //         margin-right: calc(0px - (100vw - #{$inner-max-width})/2);
    //     }

    //     @media (min-width: #{$outer-max-width}) {
    //         margin-left: calc(0px - (#{$outer-max-width} - #{$inner-max-width})/2);
    //         margin-right: calc(0px - (#{$outer-max-width} - #{$inner-max-width})/2);
    //     }
	// }

	// .full-bleed {

    //     @media (min-width: #{$inner-max-width}) {

    //         margin-left: calc(0px - (100vw - #{$inner-max-width})/2);
    //         margin-right: calc(0px - (100vw - #{$inner-max-width})/2);
    //         padding-left: calc((100vw - #{$inner-max-width})/2);
    //         padding-right: calc((100vw - #{$inner-max-width})/2);

    //     }

    //     @media (min-width: #{$outer-max-width}) {

    //         margin-left: calc(0px - (#{$outer-max-width} - #{$inner-max-width})/2);
    //         margin-right: calc(0px - (#{$outer-max-width} - #{$inner-max-width})/2);
    //         padding-left: calc((#{$outer-max-width} - #{$inner-max-width})/2);
    //         padding-right: calc((#{$outer-max-width} - #{$inner-max-width})/2);
    //     }

	// 	&--left {
	// 		padding-left: 0;
	// 	}

	// 	&--right {
	// 		padding-right: 0;
	// 	}
	// }
}


// .willow-page {
    // &__introduction, 
    // &__content,
    // &__conclusion {
    //     @extend .container;
    // }

    // &__content {
    //     display: flex;
    //     flex-direction: column;
    //     justify-content: flex-start;
    //     min-height: 100vh;
    // }
// }

// .row.grow {
//     flex-grow: 1;
// }


//how do we handle row margin bottom if we aren't incasing everything in a row? Then the margin bottom has to come from the components? can't come from the top/middle/bottom containers